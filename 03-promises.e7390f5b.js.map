{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,QAAS,IACTC,SAAS,IAGX,MAAMC,EAAO,CACXC,cAAeC,SAASC,cAAc,uBACtCC,aAAcF,SAASC,cAAc,sBACrCE,eAAgBH,SAASC,cAAc,wBACvCG,SAAUJ,SAASC,cAAc,UAiCnC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxCbT,EAAKM,SAASW,iBAAiB,UAE/B,SAAoBC,GAClBA,EAAMC,iBAEN,IAAIC,EAAapB,EAAKC,cAAcoB,cAChCC,EAAYtB,EAAKI,aAAaiB,cAC9BE,EAAiBvB,EAAKK,eAAegB,cAErCG,EAAQJ,EAEZ,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAgBE,GAAK,EAAG,CAG3ClB,EAFekB,EAESD,GACrBE,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBd,EAAAF,GAASG,OAAO+B,QACd,uBAAqBnB,QAAiBC,MAAU,IAGnDmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBd,EAAAF,GAASG,OAAOiC,QACd,sBAAoBrB,QAAeC,MAAU,IAInDe,GAASF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  timeout: 5000,\n  useIcon: false,\n});\n\nconst refs = {\n  getDelayInput: document.querySelector('input[name=\"delay\"]'),\n  getStepInput: document.querySelector('input[name=\"step\"]'),\n  getAmountInput: document.querySelector('input[name=\"amount\"]'),\n  dataForm: document.querySelector('.form'),\n};\n\nrefs.dataForm.addEventListener('submit', formSubmit);\n\nfunction formSubmit(event) {\n  event.preventDefault();\n\n  let firstDelay = refs.getDelayInput.valueAsNumber;\n  let stepDelay = refs.getStepInput.valueAsNumber;\n  let amountPromises = refs.getAmountInput.valueAsNumber;\n\n  let delay = firstDelay;\n\n  for (let i = 1; i <= amountPromises; i += 1) {\n    let position = i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += stepDelay;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$parcel$interopDefault","Notify","init","timeout","useIcon","$47d4ff9957288465$var$refs","getDelayInput","document","querySelector","getStepInput","getAmountInput","dataForm","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","firstDelay","valueAsNumber","stepDelay","amountPromises","delay1","i","then","success","catch","failure"],"version":3,"file":"03-promises.e7390f5b.js.map"}